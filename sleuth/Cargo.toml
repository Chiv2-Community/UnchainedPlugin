[package]
name = "sleuthlib"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["staticlib", "cdylib", "rlib"]

[dependencies]
winapi = { version = "0.3.9", features = ["winnt", "wincrypt", "winuser"] }

patternsleuth = { git = "https://github.com/Knutschbert/patternsleuth.git", rev = "644f980", features = ["process-internal", "serde-resolvers", "image-pe"] }
dll_hook = { git = "https://github.com/Knutschbert/patternsleuth.git", rev = "644f980", package = "dll_hook" }
# patternsleuth = { path = "../../patternsleuth/patternsleuth", features = ["process-internal", "symbols", "serde-resolvers", "image-pe", "image-elf"] }
# dll_hook = { path = "../../patternsleuth/examples/dll_hook"}
anyhow = "1.0.79"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0"
# typetag = "0.2.20"
tracing = "0.1.40"
futures = "0.3.31"
once_cell = "1.19"
paste = "1.0.15"
widestring = "1.0.2"
# backtrace = "0.3.69"
bitflags = "2.4.1"
# eframe = "0.24.0"
# egui-winit = { version = "0.24.0", default-features = false }
indexmap = "2.1.0"
parking_lot = "0.12.1"
simple-log = "1.6.0"
# thread_local = "1.1.7"
regex = "1.11"
chrono = "0.4.0"
log = "0.4"
log4rs = "1.3.0"
clap = { version = "4.5.0", features = ["derive"] } # cli arg parsing
shell-words = "1.1"

retour = { version = "0.3.1", features = ["static-detour"]}
windows = { version = "0.52.0", features = ["Win32_Foundation",
            "Win32_System_Console", 
            "Win32_System_LibraryLoader", 
            "Win32_System_SystemServices",
            "Win32_Graphics_Gdi", 
            "Win32_Graphics_Direct3D", 
            "Win32_Graphics_Direct3D11",
            "Win32_Graphics_Dxgi", 
            "Win32_Graphics_Dxgi_Common",
            "Win32_UI_WindowsAndMessaging",
            "Win32_System_Threading",

            "Win32_Security",
            "Win32_System_Kernel",
            "Win32_System_Memory",
            "Win32_System_ProcessStatus",
            ]}
rand = "0.9.1"
async-std = "1.13.1"

# Server registration
# a2s = { version = "0.5.2", optional = true }
a2s = { path = "../../a2s-rs", optional = true }
reqwest = { version = "0.12.19", optional = true, features = ["blocking", "json"]  }


# [target."cfg(windows)".dev-dependencies.windows]
# version = "0.48"
# features = ["Win32_Foundation",
#             "Win32_System_Console", "Win32_System_LibraryLoader", "Win32_System_SystemServices",
#             "Win32_Graphics_Gdi", "Win32_Graphics_Direct3D", "Win32_Graphics_Direct3D11",
#             "Win32_Graphics_Dxgi", "Win32_Graphics_Dxgi_Common",
#             "Win32_UI_WindowsAndMessaging",
#             ]

# [target.'cfg(windows)'.dependencies]
# winapi = { version = "0.3.9", features = ["winnt", "wincrypt", "winuser"] }

[features]
default = [
        "serde-resolvers",
        "chat-commands",
        "cli-commands",
        "kismet-log",
        "chat-log",
        "chiv2",
        "mirage",
        #"demo",
        #"syslog-client",
        "rcon",
        "dev",
        #"server-registration",
        ]
serde-resolvers = []
image-elf = []
dev = []

# UE generic
cli-commands = []
rcon = []
syslog-client = []
kismet-log = []
demo = []

# Client specific
server-registration = ["dep:a2s", "dep:reqwest"]
chiv2 = []
chat-commands = []
chat-log = []
mirage = []

# WIP
object-lookup = []

server = [
#        "chat-commands",
        "cli-commands",
#        "kismet-log",
        "chat-log",
        "chiv2",
]
